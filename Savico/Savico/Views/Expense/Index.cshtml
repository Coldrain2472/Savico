@using Savico.Core.Models.ViewModels.Expense
@model IEnumerable<ExpenseViewModel>

@{
    ViewData["Title"] = "All Expenses";
    int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
}

<h2>Expenses</h2>

<form asp-controller="Expense" asp-action="Index" method="get" class="form-inline mb-3">
    <label for="filterBy" class="mr-2">Filter by:</label>
    <select name="filterBy" id="filterBy" class="form-control mr-2">
        <option value="recent" selected="@((ViewData["FilterOption"]?.ToString() == "recent") ? "selected" : "")">Most Recent</option>
        <option value="amount" selected="@((ViewData["FilterOption"]?.ToString() == "amount") ? "selected" : "")">Amount</option>
    </select>
    <button type="submit" class="btn btn-primary mr-2">Apply</button>
    <a asp-action="Index" class="btn btn-secondary">Reset Filter</a>
</form>

@if (Model == null || !Model.Any())
{
    <p>No expenses found. Please add some or adjust the filter criteria.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expense in Model)
            {
                <tr>
                    <td>@expense.Date.ToString("dd.MM.yyyy")</td>
                    <td>@expense.Amount @expense.Currency</td>
                    <td>@expense.CategoryName</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@expense.Id" class="btn btn-warning">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-action="Details" asp-route-id="@expense.Id" class="btn btn-info">
                            <i class="fas fa-info-circle"></i> Details
                        </a>
                        <a asp-action="Delete" asp-route-id="@expense.Id" class="btn btn-danger">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="d-flex justify-content-between align-items-center">
    <div>
        @if (currentPage > 1)
        {
            <a asp-action="Index" asp-route-pageNumber="1" asp-route-filterBy="@ViewData["FilterOption"]" class="btn btn-secondary">First</a>
            <a asp-action="Index" asp-route-pageNumber="@(currentPage - 1)" asp-route-filterBy="@ViewData["FilterOption"]" class="btn btn-secondary">Previous</a>
        }
    </div>

    <div>Page @currentPage of @totalPages</div>

    <div>
        @if (currentPage < totalPages)
        {
            <a asp-action="Index" asp-route-pageNumber="@(currentPage + 1)" asp-route-filterBy="@ViewData["FilterOption"]" class="btn btn-secondary">Next</a>
            <a asp-action="Index" asp-route-pageNumber="@totalPages" asp-route-filterBy="@ViewData["FilterOption"]" class="btn btn-secondary">Last</a>
        }
    </div>
</div>

<a asp-action="Create" class="btn btn-primary mt-3">
    <i class="fas fa-plus-circle"></i> Add New Expense
</a>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
